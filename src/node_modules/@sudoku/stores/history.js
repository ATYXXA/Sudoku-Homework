import { writable } from 'svelte/store';

// 创建状态栈
export const undoStack = writable([]);
export const redoStack = writable([]);
export const recallStack_toundo = writable([]);
export const recallStack_toredo = writable([]);

// 检查是否可以进行undo/redo操作
export const canUndo = writable(false);
export const canRedo = writable(false);

export const canRecall = writable(false);
export const recall_times = writable(0);

// 更新状态栈的可用性
function updateAvailability(undoStackStore, redoStackStore , recallStack_undo_Store) {
    const unsubscribeUndo = undoStackStore.subscribe(stack => {
        canUndo.set(stack.length > 0);
    });

    const unsubscribeRedo = redoStackStore.subscribe(stack => {
        canRedo.set(stack.length > 0);
    });

    const unsubscribeRecall_undo = recallStack_undo_Store.subscribe(stack => {
        canRecall.set(stack.length > 0);
    });

    return () => {
        unsubscribeUndo();
        unsubscribeRedo();
        unsubscribeRecall_undo();
    };
}

// 初始化可用性检查
updateAvailability(undoStack, redoStack , recallStack_toundo);
